<!--
  ~ Copyright 2018 Kostyantyn Krakovych
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         name="Default Maven PMD Plugin Ruleset"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
  <description>
    The ruleset to check database-maven-plugin source code by the Maven PMD Plugin.
  </description>

  <!-- Best Practices -->
  <rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod"/>
  <rule ref="category/java/bestpractices.xml/AccessorClassGeneration"/>
  <rule ref="category/java/bestpractices.xml/AccessorMethodGeneration"/>
  <rule ref="category/java/bestpractices.xml/ArrayIsStoredDirectly"/>
  <rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace"/>
  <rule ref="category/java/bestpractices.xml/AvoidReassigningParameters"/>
  <rule ref="category/java/bestpractices.xml/AvoidStringBufferField"/>
  <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP"/>
  <rule ref="category/java/bestpractices.xml/CheckResultSet"/>
  <rule ref="category/java/bestpractices.xml/ConstantsInInterface"/>
  <rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt"/>
  <rule ref="category/java/bestpractices.xml/ForLoopCanBeForeach"/>
  <rule ref="category/java/bestpractices.xml/GuardLogStatement"/>
  <rule ref="category/java/bestpractices.xml/JUnit4SuitesShouldUseSuiteAnnotation"/>
  <rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseAfterAnnotation"/>
  <rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseBeforeAnnotation"/>
  <rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseTestAnnotation"/>
  <rule ref="category/java/bestpractices.xml/JUnitAssertionsShouldIncludeMessage"/>
  <rule ref="category/java/bestpractices.xml/JUnitTestContainsTooManyAsserts"/>
  <rule ref="category/java/bestpractices.xml/JUnitTestsShouldIncludeAssert"/>
  <rule ref="category/java/bestpractices.xml/JUnitUseExpected"/>
  <rule ref="category/java/bestpractices.xml/LooseCoupling"/>
  <rule ref="category/java/bestpractices.xml/MethodReturnsInternalArray"/>
  <rule ref="category/java/bestpractices.xml/MissingOverride"/>
  <rule ref="category/java/bestpractices.xml/OneDeclarationPerLine"/>
  <rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInCaseInsensitiveComparisons"/>
  <rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInComparisons"/>
  <rule ref="category/java/bestpractices.xml/PreserveStackTrace"/>
  <rule ref="category/java/bestpractices.xml/ReplaceEnumerationWithIterator"/>
  <rule ref="category/java/bestpractices.xml/ReplaceHashtableWithMap"/>
  <rule ref="category/java/bestpractices.xml/ReplaceVectorWithList"/>
  <rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault"/>
  <rule ref="category/java/bestpractices.xml/SystemPrintln"/>
  <rule ref="category/java/bestpractices.xml/UnusedFormalParameter"/>
  <rule ref="category/java/bestpractices.xml/UnusedImports"/>
  <rule ref="category/java/bestpractices.xml/UnusedLocalVariable"/>
  <rule ref="category/java/bestpractices.xml/UnusedPrivateField"/>
  <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod"/>
  <rule ref="category/java/bestpractices.xml/UseAssertEqualsInsteadOfAssertTrue"/>
  <rule ref="category/java/bestpractices.xml/UseAssertNullInsteadOfAssertTrue"/>
  <rule ref="category/java/bestpractices.xml/UseAssertSameInsteadOfAssertTrue"/>
  <rule ref="category/java/bestpractices.xml/UseAssertTrueInsteadOfAssertEquals"/>
  <rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty"/>
  <rule ref="category/java/bestpractices.xml/UseVarargs"/>

  <!-- Code Style -->
  <rule ref="category/java/codestyle.xml/AbstractNaming"/>
  <rule ref="category/java/codestyle.xml/AtLeastOneConstructor"/>
  <rule ref="category/java/codestyle.xml/AvoidDollarSigns"/>
  <rule ref="category/java/codestyle.xml/AvoidFinalLocalVariable"/>
  <rule ref="category/java/codestyle.xml/AvoidPrefixingMethodParameters"/>
  <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass"/>
  <rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending"/>
  <rule ref="category/java/codestyle.xml/AvoidUsingNativeCode"/>
  <rule ref="category/java/codestyle.xml/BooleanGetMethodName"/>
  <rule ref="category/java/codestyle.xml/CallSuperInConstructor"/>
  <rule ref="category/java/codestyle.xml/ClassNamingConventions"/>
  <rule ref="category/java/codestyle.xml/CommentDefaultAccessModifier"/>
  <rule ref="category/java/codestyle.xml/ConfusingTernary"/>
  <rule ref="category/java/codestyle.xml/ControlStatementBraces"/>
  <rule ref="category/java/codestyle.xml/DefaultPackage"/>
  <rule ref="category/java/codestyle.xml/DontImportJavaLang"/>
  <rule ref="category/java/codestyle.xml/DuplicateImports"/>
  <rule ref="category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract"/>
  <rule ref="category/java/codestyle.xml/ExtendsObject"/>
  <rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass"/>
  <rule ref="category/java/codestyle.xml/FieldNamingConventions"/>
  <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop"/>
  <rule ref="category/java/codestyle.xml/ForLoopsMustUseBraces"/>
  <rule ref="category/java/codestyle.xml/FormalParameterNamingConventions"/>
  <rule ref="category/java/codestyle.xml/GenericsNaming"/>
  <rule ref="category/java/codestyle.xml/IdenticalCatchBranches"/>
  <rule ref="category/java/codestyle.xml/IfElseStmtsMustUseBraces"/>
  <rule ref="category/java/codestyle.xml/IfStmtsMustUseBraces"/>
  <rule ref="category/java/codestyle.xml/LinguisticNaming"/>
  <rule ref="category/java/codestyle.xml/LocalHomeNamingConvention"/>
  <rule ref="category/java/codestyle.xml/LocalInterfaceSessionNamingConvention"/>
  <rule ref="category/java/codestyle.xml/LocalVariableCouldBeFinal"/>
  <rule ref="category/java/codestyle.xml/LocalVariableNamingConventions"/>
  <rule ref="category/java/codestyle.xml/LongVariable">
    <properties>
      <property name="minimum" value="50"/>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/MDBAndSessionBeanNamingConvention"/>
  <rule ref="category/java/codestyle.xml/MethodArgumentCouldBeFinal"/>
  <rule ref="category/java/codestyle.xml/MethodNamingConventions"/>
  <rule ref="category/java/codestyle.xml/MIsLeadingVariableName"/>
  <rule ref="category/java/codestyle.xml/NoPackage"/>
  <rule ref="category/java/codestyle.xml/OnlyOneReturn"/>
  <rule ref="category/java/codestyle.xml/PackageCase"/>
  <rule ref="category/java/codestyle.xml/PrematureDeclaration"/>
  <rule ref="category/java/codestyle.xml/RemoteInterfaceNamingConvention"/>
  <rule ref="category/java/codestyle.xml/RemoteSessionInterfaceNamingConvention"/>
  <rule ref="category/java/codestyle.xml/ShortClassName"/>
  <rule ref="category/java/codestyle.xml/ShortMethodName"/>
  <rule ref="category/java/codestyle.xml/ShortVariable">
    <properties>
      <property name="minimum" value="2"/>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/SuspiciousConstantFieldName"/>
  <rule ref="category/java/codestyle.xml/TooManyStaticImports">
    <properties>
      <property name="maximumStaticImports" value="99"/>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/UnnecessaryAnnotationValueElement"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryConstructor"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryModifier"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryReturn"/>
  <rule ref="category/java/codestyle.xml/UselessParentheses"/>
  <rule ref="category/java/codestyle.xml/UselessQualifiedThis"/>
  <rule ref="category/java/codestyle.xml/VariableNamingConventions"/>
  <rule ref="category/java/codestyle.xml/WhileLoopsMustUseBraces"/>

  <!-- Design -->

  <!-- Documentation -->

  <!-- Error Prone -->

  <!-- Multithreading -->

  <!-- Performance -->

  <!-- Security -->

</ruleset>
